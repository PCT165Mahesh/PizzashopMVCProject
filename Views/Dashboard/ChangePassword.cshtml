@model PizzashopMVCProject.ViewModels.ChangePassViewModel
@{
    ViewData["Title"] = "Change Password Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="body_content">
    <!-- change Password Starts-->
    <div class="user_list_header mb-5">
        <div class="user_header fs-2 fs-lg-1 fw-bold">
            <span>Change Password</span>
        </div>
    </div>


    <form asp-action="ChangePassword" asp-controller="Dashboard" id="form-submit">
        <div class="ps-lg-0">
            <p>Enter a New Password to Update your account credentials</p>
            <div class="form-floating col-md-6 mb-3 position-relative">
                <input asp-for="@Model.CurrentPassword" type="password" class="form-control password-field" id="currentPassword" placeholder="password" />
                <span class="password-error text-danger"></span> <!-- Error Message Will Appear Here -->
                <img src="~/images/icons/eye-close.svg" alt="" width="22px" class="toggle-password placeholder_icon" />
                <label for="currentPassword">Current Password</label>
            </div>

            <div class="form-floating col-md-6 mb-3 position-relative">
                <input asp-for="@Model.NewPassword" type="password" class="form-control password-field" id="NewPassword" placeholder="password" />
                <span class="password-error text-danger"></span> <!-- Error Message Will Appear Here -->
                <img src="~/images/icons/eye-close.svg" alt="" width="22px" class="toggle-password placeholder_icon" />
                <label for="NewPassword">New Password</label>
            </div>

            <div class="form-floating col-md-6 mb-3 position-relative">
                <input asp-for="@Model.ConfirmNewPassword" type="password" class="form-control password-field" id="ConfirmNewPassword" placeholder="password" />
                <span class="password-error text-danger"></span> <!-- Error Message Will Appear Here -->
                <img src="~/images/icons/eye-close.svg" alt="" width="22px" class="toggle-password placeholder_icon" />
                <label for="ConfirmNewPassword">Confirm New Password</label>
            </div>

              @* @Html.ValidationSummary(true, "", new {@class = "text-danger"}) *@
              @* <div asp-validation-summary="All" class="text-danger"></div> *@
            
            <div class="d-flex justify-content-start">
            <button class="btn create_user_btn me-2">Submit</button>
            <button class="btn cancle_btn">Cancel</button>
            </div>
            </div>
    </form>
</div>


@section Scripts
{
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        $(document).ready(function () {
            // Client-Side Validation
            $("#form-submit").submit(function (e) {
                e.preventDefault(); // Prevent default form submission

                let isValid = true;
                let currentPassword = $("#currentPassword").val().trim();
                let newPassword = $("#NewPassword").val().trim();
                let confirmNewPassword = $("#ConfirmNewPassword").val().trim();

                // Clear previous error messages
                $(".password-error").text("");

                // Validate Current Password
                if (currentPassword === "") {
                    $("#currentPassword").next(".password-error").text("Current Password is required.");
                    isValid = false;
                }

                // Validate New Password
                if (newPassword === "") {
                    $("#NewPassword").next(".password-error").text("New Password is required.");
                    isValid = false;
                } else if (newPassword.length < 8) {
                    $("#NewPassword").next(".password-error").text("Password must be at least 8 characters long.");
                    isValid = false;
                } else {
                    let hasNumber = /\d/.test(newPassword);
                    let hasUpper = /[A-Z]/.test(newPassword);
                    let hasLower = /[a-z]/.test(newPassword);
                    let hasSpecialChar = /[^a-zA-Z0-9]/.test(newPassword);

                    if (!hasNumber) {
                        $("#NewPassword").next(".password-error").text("Password must contain at least one number.");
                        isValid = false;
                    } else if (!hasUpper) {
                        $("#NewPassword").next(".password-error").text("Password must contain at least one uppercase letter.");
                        isValid = false;
                    } else if (!hasLower) {
                        $("#NewPassword").next(".password-error").text("Password must contain at least one lowercase letter.");
                        isValid = false;
                    } else if (!hasSpecialChar) {
                        $("#NewPassword").next(".password-error").text("Password must contain at least one special character.");
                        isValid = false;
                    }
                }

                // Validate Confirm Password
                if (confirmNewPassword === "") {
                    $("#ConfirmNewPassword").next(".password-error").text("Confirm Password is required.");
                    isValid = false;
                } else if (confirmNewPassword !== newPassword) {
                    $("#ConfirmNewPassword").next(".password-error").text("Passwords do not match.");
                    isValid = false;
                }

                // Submit Form if Valid
                if (isValid) {
                    $("#form-submit").off("submit").submit();
                }
            });

            // Clear validation messages on input change
            $("input").on("input", function () {
                $(this).next("span").text("");
            });

            // Toggle Password Visibility
            $(".toggle-password").click(function () {
                let inputField = $(this).closest(".position-relative").find("input.password-field"); // Find the input field in the same wrapper
                let inputType = inputField.attr("type");

                if (inputType === "password") {
                    inputField.attr("type", "text");
                    $(this).attr("src", "/images/icons/eye.svg"); // Open eye icon
                } else {
                    inputField.attr("type", "password");
                    $(this).attr("src", "/images/icons/eye-close.svg"); // Closed eye icon
                }
            });
        });
    </script>

     <script>
        $(document).ready(function () {
        
        toastr.options = {
                "closeButton": true,  // Adds a close button
                "progressBar": true,  // Shows a progress bar
                "positionClass": "toast-top-right",  // Position of toast
                "timeOut": "5000",  // Auto-close after 5 seconds
                "extendedTimeOut": "2000",  // Extra time if hovered
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut",
                "iconClass": ""  // Removes the icon class
            };
            var successMessage = '@(TempData["SuccessMessage"] ?? "")';
            var errorMessage = '@(TempData["ErrorMessage"] ?? "")';

            if (successMessage && successMessage.trim() !== "") {
                toastr.success(successMessage);
            }

            if (errorMessage && errorMessage.trim() !== "") {
                toastr.error(errorMessage);
            }
        });
</script>
}