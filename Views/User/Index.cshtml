@* @model PizzashopMVCProject.ViewModels.PaginationViewModel *@
@{
    ViewData["Title"] = "User List Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="body_content">
    <!-- User List Starts-->
    <div class="d-flex flex-column flex-lg-row justify-content-between user_list_header">
        <!-- User Header -->
        <div class="user_header fs-2 fs-lg-1">
            <span>Users</span>
        </div>
        <!-- Search box and button starts-->
        <div class="d-flex flex-row">
            <form class="d-flex position-relative" role="search">
                <input class="form-control me-2" type="search" using Microsoft.EntityFrameworkCore.Metadata.Internal;
                    placeholder="Search" id="search" aria-label="Search" />
                <label for="search" class="search_icon"><img src="~/images/icons/search.svg" alt="" /></label>
            </form>
            <button type="button" class="btn add_user_btn">
                <a asp-action="AddUser" asp-controller="User" class="text-white text-decoration-none">+Add User</a>
            </button>
        </div>
        <!-- Search box and button Ends -->
    </div>

    <form id="csrfForm">
        @Html.AntiForgeryToken()
    </form>

    <!-- User List table Starts -->

    <div class="table_container table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">
                        Name
                        <button class="btn p-0">
                            <img src="~/images/icons/arrow-up.svg" alt="" width="20px" />
                        </button>
                        <button class="btn p-0">
                            <img src="~/images/icons/arrow-down.svg" alt="" width="20px" />
                        </button>
                    </th>
                    <th scope="col">Email</th>
                    <th scope="col">Phone</th>
                    <th scope="col">
                        Role
                        <button class="btn p-0">
                            <img src="~/images/icons/arrow-up.svg" alt="" width="20px" />
                        </button>
                        <button class="btn p-0">
                            <img src="~/images/icons/arrow-down.svg" alt="" width="20px" />
                        </button>
                    </th>
                    <th scope="col">Status</th>
                    <th scope="col">Action</th>
                </tr>
            </thead>
            <tbody id="userListBody">


            </tbody>
        </table>
        <!-- Paggination Frontend Start -->
        <div class="d-flex flex-sm-row flex-column align-items-center justify-content-end pagination_container">
            <div class="d-flex flex-row align-items-center">
                <span>Items per page:</span>

            <!-- Page  Numbers Drop Down -->
            <select class="form-select w-auto" aria-label="Default select example" id="selectPageSize">
                <option selected>3</option>
                <option value="5">5</option>
                <option value="10">10</option>
                <option value="15">15</option>
            </select>
            </div>

            <span style="margin-left: 8px" class="pagination_details">
                @* Showing @((Model.PageNo - 1) * Model.PageSize + 1) - @(Math.Min(Model.PageNo * Model.PageSize,
                Model.TotalRecords)) of @Model.TotalRecords *@
            </span>

            <div>
                <button type="button" class="btn border border-black prev_page" id="prevPageIcon">
                <img src="~/images/icons/chevron-left.svg" alt="" />
            </button>
            <button type="button" class="btn border border-black" id="nextPageIcon">
                <img src="~/images/icons/chevron-right.svg" alt="" />
            </button>
            </div>
        </div>
        <!-- Pagination Frontend Ends -->
    </div>

    <!-- Delete user Modal -->
<div class="modal fade" tabindex="-1" id="myModal" aria-labelledby="modal-title">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title fw-bolder text-muted">
                    Delete Confirmation
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <img src="~/images/icons/warning-icon.svg" alt="" width="35px" />
                <p class="fs-5 fw-bold text-muted">
                    Are you sure you want to delete this user?
                </p>
            </div>
            <div class="modal-footer border-0 d-flex justify-content-center">
                <button type="button" class="btn btn-primary" id="confirmDeleteBtn">Yes</button>
                <button type="button" class="btn cancle_btn" data-bs-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>
</div>


@section Scripts {
    <script>
        $(document).ready(function () {

            toastr.options = {
                "closeButton": true,  // Adds a close button
                "progressBar": true,  // Shows a progress bar
                "positionClass": "toast-top-right",  // Position of toast
                "timeOut": "5000",  // Auto-close after 5 seconds
                "extendedTimeOut": "2000",  // Extra time if hovered
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut",
                "iconClass": ""  // Removes the icon class
            };
            var successMessage = '@(TempData["SuccessMessage"])';
            var errorMessage = '@(TempData["ErrorMessage"])';

            console.log("success message :-",successMessage);

            if (successMessage && successMessage.trim() !== "") {
                toastr.success(successMessage);
            }

            if (errorMessage && errorMessage.trim() !== "") {
                toastr.error(errorMessage);
            }
        });
    </script>
   
   <script>
    $(document).ready(function () {
    var pageNo = 1; // Current page number
    var pageSize = $("#selectPageSize").val(); // Default page size
    var totalRecords = 0; // Total records placeholder
    var debounceTimer; // Timer for debounce

    function loadUsers(pageNo, pageSize, searchQuery = "") {
        $.ajax({
            url: '@Url.Action("GetUserList", "User")',
            type: "GET",
            data: { pageNo: pageNo, pageSize: pageSize, search: searchQuery },
            success: function (response) {
                var users = response.users;
                totalRecords = response.totalRecords;
                $("#userListBody").empty();

                if (users.length === 0) {
                    $("#userListBody").append('<tr><td colspan="6" class="text-center">No users found</td></tr>');
                } else {
                    console.log(users);
                    $.each(users, function (index, user) {
                    console.log(user.userId)
                        $("#userListBody").append(`
                            <tr>
                                <td>
                                    <img src="${user.imgUrl ? user.imgUrl : '/images/Default_pfp.svg.png'}" 
                                        alt="User Image"class="rounded-circle" width="25px" height="25px">
                                    ${user.firstName} ${user.lastName}
                                </td>
                                <td>${user.email}</td>
                                <td>${user.phone}</td>
                                <td>${user.roleName}</td>
                                <td>
                                    ${user.status ? '<div class="status active_status">Active</div>' : '<div class="status inactive_status">Inactive</div>'}
                                </td>
                                <td>
                                    <a class="btn user_action" href="@Url.Action("EditUser", "User")?id=${user.userId}">
                                        <img src="/images/icons/edit-pen.svg" alt="" />
                                    </a>
                                    <a class="btn user_action user_action_delete deleteUserBtn" data-id="${user.userId}" data-bs-toggle="modal" data-bs-target="#myModal">
                                        <img src="/images/icons/delete-trash-icon.svg" alt="" />
                                    </a>
                                </td>
                            </tr>
                        `);
                    });
                }

                // Update pagination info
                $(".pagination_details").text(
                    `Showing ${(pageNo - 1) * pageSize + 1} - ${Math.min(pageNo * pageSize, totalRecords)} of ${totalRecords}`
                );

                // Disable pagination buttons when needed
                $("#prevPageIcon").prop("disabled", pageNo === 1);
                $("#nextPageIcon").prop("disabled", pageNo * pageSize >= totalRecords);
            },
            error: function () {
                alert("Error loading users");
            }
        });
    }

    // Search with debounce to prevent too many API calls
    $("#search").on("input", function () {
        clearTimeout(debounceTimer);
        debounceTimer = setTimeout(function () {
            pageNo = 1; // Reset to first page on search
            loadUsers(pageNo, $("#selectPageSize").val(), $("#search").val());
        }, 300); // 300ms delay for debounce
    });

    // Page size change event
    $("#selectPageSize").change(function () {
        pageSize = $(this).val();
        pageNo = 1; // Reset to first page when changing page size
        loadUsers(pageNo, pageSize, $("#search").val());
    });

    // Next page event
    $("#nextPageIcon").click(function () {
        if (pageNo * pageSize < totalRecords) {
            pageNo++;
            loadUsers(pageNo, pageSize, $("#search").val());
        }
    });

    // Previous page event
    $("#prevPageIcon").click(function () {
        if (pageNo > 1) {
            pageNo--;
            loadUsers(pageNo, pageSize, $("#search").val());
        }
    });

    // Load users initially
    loadUsers(pageNo, pageSize);
});

   </script>
   <script>
        $(document).ready(function () {
            var userIdToDelete = null;

            // Capture the User ID when Delete button is clicked
            $(document).on("click", ".deleteUserBtn", function () {
                userIdToDelete = $(this).data("id");
                @* console.log("User ID to delete: ", userIdToDelete); *@
            });

            // Handle Delete Confirmation Click
            $("#confirmDeleteBtn").on("click", function () {
                if (userIdToDelete) {
                    $.ajax({
                        url: "/User/SoftDeleteUser",
                        type: "POST",
                        data: { id: userIdToDelete }, // Send data as form data
                        headers: {
                            "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() // CSRF Token
                        },
                        success: function (response) {
                            if (response.success) {
                                $("#myModal").modal("hide");
                                toastr.success("User Deleted successfully!");
                                setTimeout(function () {
                                    location.reload(); // Refresh user list
                                }, 1000);
                            } else {
                                toastr.error("Cannot Delete User!");
                            }
                        },
                        error: function (xhr, status, error) {
                            console.log(xhr.responseText);
                            alert("An error occurred while deleting the user.");
                        }
                    });
                }
            });
        });

</script>
}