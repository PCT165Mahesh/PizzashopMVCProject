@model PizzashopMVCProject.ViewModels.AddUserViewModel
@{
    ViewData["Title"] = "Add User Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="body_content">
    <!-- Edit User Starts-->
    <div class="d-flex flex-row justify-content-between user_list_header">
        <!-- Edit User Header -->
        <div class="user_header fs-2 fs-lg-1">
            <span>Add New User</span>
        </div>
        <!-- Back Button -->
        <a href="./user_list.html" class="btn back_btn d-flex align-items-center justify-content-center">
            <img src="~/images/icons/chevron-left.svg" alt="" />
            Back
        </a>
    </div>

    <!-- Edit User Form Starting -->
    <div class="form_container">
        <form id="addUserForm" asp-action="AddUser" asp-controller="User" method="post" enctype="multipart/form-data">
            <div class="row">
                <div class="form-floating col-md-6 mb-3">
                    <input asp-for="@Model.FirstName" type="text" class="form-control" id="firstName" placeholder="John" />
                    <label for="firstName">First Name</label>
                </div>
                <div class="form-floating col-md-6 mb-3">
                    <input asp-for="@Model.LastName" type="text" class="form-control" id="lastName" placeholder="Doe" />
                    <label for="lastName">Last Name</label>
                </div>
                <div class="form-floating col-md-6 mb-3">
                    <input asp-for="@Model.UserName" type="text" class="form-control" id="username" placeholder="john123" />
                    <label for="username">User Name</label>
                </div>
                <div class="form-floating col-md-6 mb-3">
                    <select asp-for="@Model.RoleId" class="form-select" id="role">
                        <option value="" selected>Select Role</option>
                    </select>
                    <label for="role">Role</label>
                </div>
                <div class="form-floating col-md-6 mb-3">
                    <input asp-for="@Model.Email" type="email" class="form-control" id="email" placeholder="john123@gmail.com" />
                    <label for="email">Email</label>
                </div>
                <div class="form-floating col-md-6 mb-3 position-relative">
                    <input asp-for="@Model.Password" type="password" class="form-control password-field" id="password" placeholder="password" />
                    <img src="~/images/icons/eye-close.svg" alt="" width="22px"
                         class="toggle-password placeholder_icon"/>
                    <label for="password">Password</label>
                </div>
                <div class="browse_file col-12 mb-3 d-flex justify-content-center">
                    <input type="file" id="file" class="" asp-for="@Model.ProfileImage"/>
                    <label for="file"
                        class="browse_file_label d-flex flex-column align-items-center justify-content-center">
                        <img src="~/images/icons/cloud-arrow-up.svg" alt="" width="20px" />
                        <p class="m-0">Browse File</p>
                    </label>
                </div>
                <div class="form-floating col-md-6 col-lg-4 mb-3">
                    <select asp-for="@Model.CountryId" class="form-select" id="country">
                        <option value="" selected>Select Country</option>
                    </select>
                    <label for="country">Country</label>
                </div>
                <div class="form-floating col-md-6 col-lg-4 mb-3">
                    <select asp-for="@Model.StateId" class="form-select" id="state">
                        <option value="" selected>Select State</option>
                    </select>
                    <label for="state">State</label>
                </div>
                <div class="form-floating col-md-6 col-lg-4 mb-3">
                    <select asp-for="@Model.CityId" class="form-select" id="city">
                        <option value="" selected>Select City</option>
                    </select>
                    <label for="city">City</label>
                </div>
                <div class="form-floating col-md-6 col-lg-4 mb-3">
                    <input asp-for="@Model.Zipcode" type="text" class="form-control" id="zipcode" placeholder="" />
                    <label for="zipcode">Zipcode</label>
                </div>
                <div class="form-floating col-md-6 col-lg-4 mb-3">
                    <input asp-for="@Model.Address" type="text" class="form-control" id="address" placeholder="" />
                    <label for="address">Address</label>
                </div>
                <div class="form-floating col-md-6 col-lg-4 mb-3">
                    <input asp-for="@Model.Phone" type="text" class="form-control" id="phone" placeholder="9879898798" />
                    <label for="phone">Phone</label>
                </div>
            </div>

            <!-- Buttons -->
            <button class="btn create_user_btn">Create User</button>
            <button class="btn cancle_btn">Cancel</button>
        </form>
    </div>
</div>


@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        $(document).ready(function () {
            
             // Populate Role into select when page Loads
            $.ajax({
                url: '@Url.Action("GetRoles", "Dashboard")',
                type: "GET",
                success: function (roles) {
                    $.each(roles, function (index, role) {
                        $("#role").append('<option value="' + role.roleId + '">' + role.rolename + '</option>');
                    });
                },
                error: function () {
                    console("Error loading Roles");
                }
            });

            // Populate Countries into select when page Loads
            $.ajax({
                url: '@Url.Action("GetCountries", "Dashboard")',
                type: "GET",
                success: function (countries) {
                    $("#state").empty().append('<option value="">Select State</option>');
                    $("#city").empty().append('<option value="">Select City</option>');
                    $.each(countries, function (index, country) {
                        $("#country").append('<option value="' + country.countryId + '">' + country.name + '</option>');
                    });
                },
                error: function () {
                    console("Error loading Countries");
                }
            });


            // Load States when a Country is selected
            $('#country').change(function () {
                var countryId = $(this).val();
                $('#state').empty().append('<option value="" selected>Select State</option>');
                $('#city').empty().append('<option value="" selected>Select City</option>');

                if (countryId) {
                    $.ajax({
                        url: '@Url.Action("GetStatesByCountry", "Dashboard")',
                        type: 'GET',
                        data: { countryId: countryId },
                        success: function (data) {
                            $.each(data, function (index, item) {
                                $('#state').append($('<option>', {
                                    value: item.stateId,
                                    text: item.name
                                }));
                            });
                        }
                    });
                }
            });

            // Load Cities when a State is selected
            $('#state').change(function () {
                var stateId = $(this).val();
                $('#city').empty().append('<option value="" selected>Select City</option>');

                if (stateId) {
                    $.ajax({
                        url: '@Url.Action("GetCitiesByState", "Dashboard")',
                        type: 'GET',
                        data: { id: stateId },
                        success: function (data) {
                            $.each(data, function (index, item) {
                                $('#city').append($('<option>', {
                                    value: item.cityId,
                                    text: item.name
                                }));
                            });
                        }
                    });
                }
            });



            /*
                <------ Client Side Validation For the form submission
            */
            $('#addUserForm').submit(function (event) {
                event.preventDefault();
                let isValid = true;


                //Required Field Validation (Except Image)
                $("#addUserForm input[type='text'], #addUserForm select").each(function () {
                    let inputValue = $(this).val().trim();
                    @* console.log(inputValue); *@

                    if (!inputValue || inputValue === "0") {
                        $(this).addClass("is-invalid"); // Add error styling
                        $(this).next(".invalid-feedback").remove(); // Remove old message
                        $(this).after('<div class="invalid-feedback">This field is required</div>');
                        isValid = false;
                    } else {
                        $(this).removeClass("is-invalid");
                        $(this).next(".invalid-feedback").remove();
                    }
                })


                //Phone Number Validation (Must be 10 Digits)
                let phoneNumber = $("#phone").val().trim();
                if (phoneNumber === "" || phoneNumber === "0" || !/^\d{10}$/.test(phoneNumber)) {
                    $("#phone").addClass("is-invalid");
                    $("#phone").next(".invalid-feedback").remove();
                    $("#phone").after('<div class="invalid-feedback">Phone number must be exactly 10 digits</div>');
                    isValid = false;
                } else {
                    $("#phone").removeClass("is-invalid");
                    $("#phone").next(".invalid-feedback").remove();
                }

                // Zipcode Validation (Must Not Be Empty or 0)
                let zipcode = $("#zipcode").val().trim();
                if (zipcode === "" || zipcode === "0") {
                    $("#zipcode").addClass("is-invalid");
                    $("#zipcode").next(".invalid-feedback").remove();
                    $("#zipcode").after('<div class="invalid-feedback">Zipcode is required</div>');
                    isValid = false;
                } else {
                    $("#zipcode").removeClass("is-invalid");
                    $("#zipcode").next(".invalid-feedback").remove();
                }


                //  Email Validation (Using Built-in Validity API)
                let emailInput = $("#email").val().trim();
                if (emailInput === "") {
                    $("#email").addClass("is-invalid");
                    $("#email").next(".invalid-feedback").remove();
                    $("#email").after('<div class="invalid-feedback">Email is required</div>');
                    isValid = false;
                }
                else {
                    $("#email").removeClass("is-invalid");
                    $("#email").next(".invalid-feedback").remove();
                }


                //Password Validation 
                var password = $("#password").val().trim();
                if (password === "") {
                    $("#password").addClass("is-invalid");
                    $("#password").next(".invalid-feedback").remove();
                    $("#password").after('<div class="invalid-feedback">Password is required</div>');
                    isValid = false;
                }
                else if (password.length < 8) {
                    $("#password").addClass("is-invalid");
                    $("#password").next(".invalid-feedback").remove();
                    $("#password").after('<div class="invalid-feedback">Password must be at least 8 characters long.</div>');
                    isValid = false;
                }
                else{
                    let hasNumber = /\d/.test(password);
                    let hasUpper = /[A-Z]/.test(password);
                    let hasLower = /[a-z]/.test(password);
                    let hasSpecialChar = /[^a-zA-Z0-9]/.test(password);

                    if (!hasNumber) {
                        $("#password").addClass("is-invalid");
                        $("#password").next(".invalid-feedback").remove();
                        $("#password").after('<div class="invalid-feedback">Password must contain at least one number.</div>');
                    isValid = false;
                    } else if (!hasUpper) {
                        $("#password").addClass("is-invalid");
                        $("#password").next(".invalid-feedback").remove();
                        $("#password").after('<div class="invalid-feedback">Password must contain at least one uppercase letter.</div>');
                    isValid = false;
                    } else if (!hasLower) {
                        $("#password").addClass("is-invalid");
                        $("#password").next(".invalid-feedback").remove();
                        $("#password").after('<div class="invalid-feedback">Password must contain at least one lowercase letter.</div>');
                    isValid = false;
                    } else if (!hasSpecialChar) {
                        $("#password").addClass("is-invalid");
                        $("#password").next(".invalid-feedback").remove();
                        $("#password").after('<div class="invalid-feedback">Password must contain at least one special character.</div>');
                        isValid = false;
                    }
                }



                if (isValid) {
                    $("#addUserForm").off("submit").submit();
                }
            });
            // Remove error styling when user types
            $("#addUserForm input, #addUserForm select, #addUserForm password,#addUserForm email").on("input change", function () {
                $(this).removeClass("is-invalid");
                $(this).next(".invalid-feedback").remove();
            });

            // Toggle Password Visibility
            $(".toggle-password").click(function () {
                let inputField = $(this).closest(".position-relative").find("input.password-field"); // Find the input field in the same wrapper
                let inputType = inputField.attr("type");

                if (inputType === "password") {
                    inputField.attr("type", "text");
                    $(this).attr("src", "/images/icons/eye.svg"); // Open eye icon
                } else {
                    inputField.attr("type", "password");
                    $(this).attr("src", "/images/icons/eye-close.svg"); // Closed eye icon
                }
            });
        });
    </script>

     <script>
        $(document).ready(function () {

            toastr.options = {
                "closeButton": true,  // Adds a close button
                "progressBar": true,  // Shows a progress bar
                "positionClass": "toast-top-right",  // Position of toast
                "timeOut": "5000",  // Auto-close after 5 seconds
                "extendedTimeOut": "2000",  // Extra time if hovered
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut",
                "iconClass": ""  // Removes the icon class
            };
            var successMessage = '@(TempData["SuccessMessage"] ?? "")';
            var errorMessage = '@(TempData["ErrorMessage"] ?? "")';

            if (successMessage && successMessage.trim() !== "") {
                toastr.success(successMessage);
            }

            if (errorMessage && errorMessage.trim() !== "") {
                toastr.error(errorMessage);
            }
        });
    </script>
}